/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.reusable;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

/**
 *
 * @author rodel
 */
public class MachineryPanel extends javax.swing.JPanel implements KeyListener{

    /**
     * Creates new form MachineryPanel
     */
    public MachineryPanel() {
        initComponents();
        initKeyListeners();
    }
    
    private void initKeyListeners() {
        txtMachineType.addKeyListener(this);
        txtMachineQty.addKeyListener(this);
        txtMachineEstValue.addKeyListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtMachineType = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMachineQty = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMachineEstValue = new javax.swing.JTextField();
        txtTotalEstValue = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Type of Unit", "Qty", "Estimated Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(1).setResizable(false);
        jTable1.getColumnModel().getColumn(2).setResizable(false);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 5, 380, 100));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel1.setText("Type");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 120, -1, -1));

        txtMachineType.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtMachineType, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 115, 170, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel2.setText("Quantity");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 145, -1, -1));

        txtMachineQty.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtMachineQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 140, 80, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel3.setText("Est. of value");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 170, -1, -1));

        txtMachineEstValue.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtMachineEstValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 165, 170, -1));

        txtTotalEstValue.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtTotalEstValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, 140, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel4.setText("Total Est. of value");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 205, -1, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 400, -1));
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtMachineEstValue;
    private javax.swing.JTextField txtMachineQty;
    private javax.swing.JTextField txtMachineType;
    private javax.swing.JTextField txtTotalEstValue;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
        switch(e.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                if(txtMachineType.isFocusOwner()) {
                    txtMachineQty.requestFocus();
                } else if(txtMachineQty.isFocusOwner()) {
                    txtMachineEstValue.requestFocus();
                }
                break;
            case KeyEvent.VK_UP:
                if(txtMachineEstValue.isFocusOwner()) {
                    txtMachineQty.requestFocus();
                } else if(txtMachineQty.isFocusOwner()) {
                    txtMachineType.requestFocus();
                }
                break;
        }
    }
}
