/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.reusable;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.math.BigDecimal;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import ui.validator.InputValidator;

/**
 *
 * @author rodel
 */
public class SourceOfIncomePanel extends javax.swing.JPanel implements KeyListener {

    /**
     * Creates new form SourceOfIncomePanel
     */
    public SourceOfIncomePanel() {
        initComponents();
        initOptions();
        initKeyListener();
    }

    /**
     * Set radio button group
     */
    private void initOptions() {
        optionBusinessRegistrationStatusGroup.add(optionBusinessRegistered);
        optionBusinessRegistrationStatusGroup.add(optionBusinessNotRegistered);
    }

    /**
     * Set KeyListeners
     */
    private void initKeyListener() {
        checkMonthlySalaryCompensation.addKeyListener(this);
        checkSourceBusiness.addKeyListener(this);
        checkSourceFarmProducts.addKeyListener(this);
        checkSourceOthers.addKeyListener(this);
        checkFarmAgri.addKeyListener(this);
        checkFarmLiveStock.addKeyListener(this);
        txtMonthlySalaryCompensation.addKeyListener(this);
        txtBusinessNature.addKeyListener(this);
        optionBusinessRegistered.addKeyListener(this);
        optionBusinessNotRegistered.addKeyListener(this);
        txtMonthlyIncomeForBusiness.addKeyListener(this);
        txtFarmHarvestSchedule.addKeyListener(this);
        txtFarmAvgProductIncome.addKeyListener(this);
        txtMonthlyIncomeForFarmProducts.addKeyListener(this);
        txtOtherSourceDesc.addKeyListener(this);
        txtMonthlyIncomeForOtherSources.addKeyListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        optionBusinessRegistrationStatusGroup = new javax.swing.ButtonGroup();
        checkMonthlySalaryCompensation = new javax.swing.JCheckBox();
        checkSourceBusiness = new javax.swing.JCheckBox();
        lblHarvestSched = new javax.swing.JLabel();
        txtFarmHarvestSchedule = new javax.swing.JTextField();
        optionBusinessRegistered = new javax.swing.JRadioButton();
        optionBusinessNotRegistered = new javax.swing.JRadioButton();
        checkSourceFarmProducts = new javax.swing.JCheckBox();
        checkFarmLiveStock = new javax.swing.JCheckBox();
        checkFarmAgri = new javax.swing.JCheckBox();
        lblNatureOfBusiness = new javax.swing.JLabel();
        txtMonthlySalaryCompensation = new javax.swing.JTextField();
        lblAvgProductIncome = new javax.swing.JLabel();
        txtFarmAvgProductIncome = new javax.swing.JTextField();
        checkSourceOthers = new javax.swing.JCheckBox();
        lblOtherSourceDesc = new javax.swing.JLabel();
        txtOtherSourceDesc = new javax.swing.JTextField();
        lblAvgMonthlyIncome = new javax.swing.JLabel();
        txtBusinessNature = new javax.swing.JTextField();
        lblAvgMonthlyIncomeForBusiness = new javax.swing.JLabel();
        txtMonthlyIncomeForBusiness = new javax.swing.JTextField();
        lblAvgMonthlyIncomeForOtherSources = new javax.swing.JLabel();
        txtMonthlyIncomeForFarmProducts = new javax.swing.JTextField();
        lblAvgMonthlyIncomeForFarmProducts = new javax.swing.JLabel();
        txtMonthlyIncomeForOtherSources = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        checkMonthlySalaryCompensation.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        checkMonthlySalaryCompensation.setText("Monthly Salary Compensation");
        checkMonthlySalaryCompensation.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkMonthlySalaryCompensationItemStateChanged(evt);
            }
        });
        add(checkMonthlySalaryCompensation, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 5, -1, -1));

        checkSourceBusiness.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        checkSourceBusiness.setText("Business");
        checkSourceBusiness.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkSourceBusinessItemStateChanged(evt);
            }
        });
        add(checkSourceBusiness, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 30, -1, -1));

        lblHarvestSched.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblHarvestSched.setText("Harvest Schedule");
        lblHarvestSched.setEnabled(false);
        add(lblHarvestSched, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 165, -1, -1));

        txtFarmHarvestSchedule.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        txtFarmHarvestSchedule.setEnabled(false);
        add(txtFarmHarvestSchedule, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 160, 127, -1));

        optionBusinessRegistered.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        optionBusinessRegistered.setSelected(true);
        optionBusinessRegistered.setText("Registered");
        optionBusinessRegistered.setEnabled(false);
        add(optionBusinessRegistered, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 80, -1, -1));

        optionBusinessNotRegistered.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        optionBusinessNotRegistered.setText("Not Registered");
        optionBusinessNotRegistered.setEnabled(false);
        add(optionBusinessNotRegistered, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 80, -1, -1));

        checkSourceFarmProducts.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        checkSourceFarmProducts.setText("Farm Products");
        checkSourceFarmProducts.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkSourceFarmProductsItemStateChanged(evt);
            }
        });
        add(checkSourceFarmProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 110, -1, -1));

        checkFarmLiveStock.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        checkFarmLiveStock.setText("LiveStock");
        checkFarmLiveStock.setEnabled(false);
        add(checkFarmLiveStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 135, -1, -1));

        checkFarmAgri.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        checkFarmAgri.setText("Agricultural");
        checkFarmAgri.setEnabled(false);
        add(checkFarmAgri, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 135, -1, -1));

        lblNatureOfBusiness.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblNatureOfBusiness.setText("Nature of Business");
        lblNatureOfBusiness.setEnabled(false);
        add(lblNatureOfBusiness, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, -1));

        txtMonthlySalaryCompensation.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        txtMonthlySalaryCompensation.setEnabled(false);
        txtMonthlySalaryCompensation.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMonthlySalaryCompensationFocusLost(evt);
            }
        });
        add(txtMonthlySalaryCompensation, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 5, 127, -1));

        lblAvgProductIncome.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblAvgProductIncome.setText("Avg. Product Inc");
        lblAvgProductIncome.setEnabled(false);
        add(lblAvgProductIncome, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        txtFarmAvgProductIncome.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        txtFarmAvgProductIncome.setEnabled(false);
        txtFarmAvgProductIncome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFarmAvgProductIncomeFocusLost(evt);
            }
        });
        add(txtFarmAvgProductIncome, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 185, 127, -1));

        checkSourceOthers.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        checkSourceOthers.setText("Other Sources");
        checkSourceOthers.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkSourceOthersItemStateChanged(evt);
            }
        });
        add(checkSourceOthers, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 215, -1, -1));

        lblOtherSourceDesc.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblOtherSourceDesc.setText("Please specify");
        lblOtherSourceDesc.setEnabled(false);
        add(lblOtherSourceDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 245, -1, -1));

        txtOtherSourceDesc.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        txtOtherSourceDesc.setEnabled(false);
        add(txtOtherSourceDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 240, 150, -1));

        lblAvgMonthlyIncome.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblAvgMonthlyIncome.setText("Avg. Monthly Compensation");
        lblAvgMonthlyIncome.setEnabled(false);
        add(lblAvgMonthlyIncome, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, -1, -1));

        txtBusinessNature.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        txtBusinessNature.setEnabled(false);
        add(txtBusinessNature, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 55, 127, -1));

        lblAvgMonthlyIncomeForBusiness.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblAvgMonthlyIncomeForBusiness.setText("Avg. Monthly Income");
        lblAvgMonthlyIncomeForBusiness.setEnabled(false);
        add(lblAvgMonthlyIncomeForBusiness, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, -1, -1));

        txtMonthlyIncomeForBusiness.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        txtMonthlyIncomeForBusiness.setEnabled(false);
        txtMonthlyIncomeForBusiness.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMonthlyIncomeForBusinessFocusLost(evt);
            }
        });
        add(txtMonthlyIncomeForBusiness, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 55, 127, -1));

        lblAvgMonthlyIncomeForOtherSources.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblAvgMonthlyIncomeForOtherSources.setText("Avg. Monthly Income");
        lblAvgMonthlyIncomeForOtherSources.setEnabled(false);
        add(lblAvgMonthlyIncomeForOtherSources, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 245, -1, -1));

        txtMonthlyIncomeForFarmProducts.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        txtMonthlyIncomeForFarmProducts.setEnabled(false);
        txtMonthlyIncomeForFarmProducts.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMonthlyIncomeForFarmProductsFocusLost(evt);
            }
        });
        add(txtMonthlyIncomeForFarmProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 135, 127, -1));

        lblAvgMonthlyIncomeForFarmProducts.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblAvgMonthlyIncomeForFarmProducts.setText("Avg. Monthly Income");
        lblAvgMonthlyIncomeForFarmProducts.setEnabled(false);
        add(lblAvgMonthlyIncomeForFarmProducts, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 140, -1, -1));

        txtMonthlyIncomeForOtherSources.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        txtMonthlyIncomeForOtherSources.setEnabled(false);
        txtMonthlyIncomeForOtherSources.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMonthlyIncomeForOtherSourcesFocusLost(evt);
            }
        });
        add(txtMonthlyIncomeForOtherSources, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 240, 127, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void checkMonthlySalaryCompensationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkMonthlySalaryCompensationItemStateChanged
        if (checkMonthlySalaryCompensation.isSelected()) {
            lblAvgMonthlyIncome.setEnabled(true);
            txtMonthlySalaryCompensation.setEnabled(true);
        } else {
            lblAvgMonthlyIncome.setEnabled(false);
            txtMonthlySalaryCompensation.setEnabled(false);
        }
    }//GEN-LAST:event_checkMonthlySalaryCompensationItemStateChanged

    private void checkSourceBusinessItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkSourceBusinessItemStateChanged
        if (checkSourceBusiness.isSelected()) {
            lblNatureOfBusiness.setEnabled(true);
            lblAvgMonthlyIncomeForBusiness.setEnabled(true);
            txtBusinessNature.setEnabled(true);
            optionBusinessRegistered.setEnabled(true);
            optionBusinessNotRegistered.setEnabled(true);
            txtMonthlyIncomeForBusiness.setEnabled(true);
        } else {
            lblNatureOfBusiness.setEnabled(false);
            lblAvgMonthlyIncomeForBusiness.setEnabled(false);
            txtBusinessNature.setEnabled(false);
            optionBusinessRegistered.setEnabled(false);
            optionBusinessNotRegistered.setEnabled(false);
            txtMonthlyIncomeForBusiness.setEnabled(false);
        }
    }//GEN-LAST:event_checkSourceBusinessItemStateChanged

    private void checkSourceFarmProductsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkSourceFarmProductsItemStateChanged
        if (checkSourceFarmProducts.isSelected()) {
            lblHarvestSched.setEnabled(true);
            lblAvgProductIncome.setEnabled(true);
            lblAvgMonthlyIncomeForFarmProducts.setEnabled(true);
            checkFarmAgri.setEnabled(true);
            checkFarmLiveStock.setEnabled(true);
            txtFarmHarvestSchedule.setEnabled(true);
            txtFarmAvgProductIncome.setEnabled(true);
            txtMonthlyIncomeForFarmProducts.setEnabled(true);
        } else {
            lblHarvestSched.setEnabled(false);
            lblAvgProductIncome.setEnabled(false);
            lblAvgMonthlyIncomeForFarmProducts.setEnabled(false);
            checkFarmAgri.setEnabled(false);
            checkFarmLiveStock.setEnabled(false);
            txtFarmHarvestSchedule.setEnabled(false);
            txtFarmAvgProductIncome.setEnabled(false);
            txtMonthlyIncomeForFarmProducts.setEnabled(false);
        }
    }//GEN-LAST:event_checkSourceFarmProductsItemStateChanged

    private void checkSourceOthersItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkSourceOthersItemStateChanged
        if (checkSourceOthers.isSelected()) {
            lblOtherSourceDesc.setEnabled(true);
            lblAvgMonthlyIncomeForOtherSources.setEnabled(true);
            txtOtherSourceDesc.setEnabled(true);
            txtMonthlyIncomeForOtherSources.setEnabled(true);
        } else {
            lblOtherSourceDesc.setEnabled(false);
            lblAvgMonthlyIncomeForOtherSources.setEnabled(false);
            txtOtherSourceDesc.setEnabled(false);
            txtMonthlyIncomeForOtherSources.setEnabled(false);
        }
    }//GEN-LAST:event_checkSourceOthersItemStateChanged

    private void txtMonthlySalaryCompensationFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMonthlySalaryCompensationFocusLost
        BigDecimal avgMonthlyCompensation = validateAmount(txtMonthlySalaryCompensation);
    }//GEN-LAST:event_txtMonthlySalaryCompensationFocusLost

    private void txtMonthlyIncomeForBusinessFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMonthlyIncomeForBusinessFocusLost
        BigDecimal avgMonthlyIncome = validateAmount(txtMonthlyIncomeForBusiness);
    }//GEN-LAST:event_txtMonthlyIncomeForBusinessFocusLost

    private void txtMonthlyIncomeForFarmProductsFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMonthlyIncomeForFarmProductsFocusLost
        BigDecimal avgMonthlyIncome = validateAmount(txtMonthlyIncomeForFarmProducts);
    }//GEN-LAST:event_txtMonthlyIncomeForFarmProductsFocusLost

    private void txtMonthlyIncomeForOtherSourcesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMonthlyIncomeForOtherSourcesFocusLost
        BigDecimal avgMonthlyIncome = validateAmount(txtMonthlyIncomeForOtherSources);
    }//GEN-LAST:event_txtMonthlyIncomeForOtherSourcesFocusLost

    private void txtFarmAvgProductIncomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFarmAvgProductIncomeFocusLost
        BigDecimal avgProductIncome = validateAmount(txtFarmAvgProductIncome);
    }//GEN-LAST:event_txtFarmAvgProductIncomeFocusLost

    private BigDecimal validateAmount(JTextField field) {
        String averageMonthlyIncome = field.getText().trim();
        if (!InputValidator.getInstance().isEmpty(averageMonthlyIncome)) {
            if (InputValidator.getInstance().isNumeric(averageMonthlyIncome)) {
                BigDecimal avgMonthlyIncome = new BigDecimal(averageMonthlyIncome);
                return avgMonthlyIncome;
            } else {
                JOptionPane.showMessageDialog(null, "Sorry, value must be numeric.", "MESSAGE", JOptionPane.WARNING_MESSAGE);
                field.requestFocus();
                field.selectAll();
                return new BigDecimal("0");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please provide a value.", "MESSAGE", JOptionPane.WARNING_MESSAGE);
            field.requestFocus();
            return new BigDecimal("0");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkFarmAgri;
    private javax.swing.JCheckBox checkFarmLiveStock;
    private javax.swing.JCheckBox checkMonthlySalaryCompensation;
    private javax.swing.JCheckBox checkSourceBusiness;
    private javax.swing.JCheckBox checkSourceFarmProducts;
    private javax.swing.JCheckBox checkSourceOthers;
    private javax.swing.JLabel lblAvgMonthlyIncome;
    private javax.swing.JLabel lblAvgMonthlyIncomeForBusiness;
    private javax.swing.JLabel lblAvgMonthlyIncomeForFarmProducts;
    private javax.swing.JLabel lblAvgMonthlyIncomeForOtherSources;
    private javax.swing.JLabel lblAvgProductIncome;
    private javax.swing.JLabel lblHarvestSched;
    private javax.swing.JLabel lblNatureOfBusiness;
    private javax.swing.JLabel lblOtherSourceDesc;
    private javax.swing.JRadioButton optionBusinessNotRegistered;
    private javax.swing.JRadioButton optionBusinessRegistered;
    private javax.swing.ButtonGroup optionBusinessRegistrationStatusGroup;
    private javax.swing.JTextField txtBusinessNature;
    private javax.swing.JTextField txtFarmAvgProductIncome;
    private javax.swing.JTextField txtFarmHarvestSchedule;
    private javax.swing.JTextField txtMonthlyIncomeForBusiness;
    private javax.swing.JTextField txtMonthlyIncomeForFarmProducts;
    private javax.swing.JTextField txtMonthlyIncomeForOtherSources;
    private javax.swing.JTextField txtMonthlySalaryCompensation;
    private javax.swing.JTextField txtOtherSourceDesc;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
        switch (e.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                if (checkMonthlySalaryCompensation.isFocusOwner()) {
                    if (checkMonthlySalaryCompensation.isSelected()) {
                        txtMonthlySalaryCompensation.requestFocus();
                    } else {
                        checkSourceBusiness.requestFocus();
                    }
                } else if (txtMonthlySalaryCompensation.isFocusOwner()) {
                    checkSourceBusiness.requestFocus();
                } else if (checkSourceBusiness.isFocusOwner()) {
                    if(checkSourceBusiness.isSelected()) {
                         txtBusinessNature.requestFocus();
                    } else {
                        checkSourceFarmProducts.requestFocus();
                    }
                } else if (txtBusinessNature.isFocusOwner()) {
                    optionBusinessRegistered.requestFocus();
                } else if (optionBusinessRegistered.isFocusOwner()) {
                    optionBusinessNotRegistered.requestFocus();
                } else if (optionBusinessNotRegistered.isFocusOwner()) {
                    txtMonthlyIncomeForBusiness.requestFocus();
                } else if (txtMonthlyIncomeForBusiness.isFocusOwner()) {
                    checkSourceFarmProducts.requestFocus();
                } else if (checkSourceFarmProducts.isFocusOwner()) {
                    if(checkSourceFarmProducts.isSelected()) {
                        checkFarmAgri.requestFocus();
                    } else {
                        checkSourceOthers.requestFocus();
                    }
                } else if (checkFarmAgri.isFocusOwner()) {
                    checkFarmLiveStock.requestFocus();
                } else if (checkFarmLiveStock.isFocusOwner()) {
                    txtFarmHarvestSchedule.requestFocus();
                } else if (txtFarmHarvestSchedule.isFocusOwner()) {
                    txtFarmAvgProductIncome.requestFocus();
                } else if (txtFarmAvgProductIncome.isFocusOwner()) {
                    txtMonthlyIncomeForFarmProducts.requestFocus();
                } else if (txtMonthlyIncomeForFarmProducts.isFocusOwner()) {
                    checkSourceOthers.requestFocus();
                } else if (checkSourceOthers.isFocusOwner()) {
                    if(checkSourceOthers.isSelected()) {
                        txtOtherSourceDesc.requestFocus();
                    }
                } else if (txtOtherSourceDesc.isFocusOwner()) {
                    txtMonthlyIncomeForOtherSources.requestFocus();
                }
                break;
            case KeyEvent.VK_UP:
                break;
        }
    }
}
