/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.reusable;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

/**
 *
 * @author rodel
 */
public class CharacterReferenceDependentPanel extends javax.swing.JPanel implements KeyListener {

    /**
     * Creates new form CharacterReferencePanel
     */
    public CharacterReferenceDependentPanel() {
        initComponents();
        initTextBoxesListener();
    }

    /**
     * Set TextBoxes KeyListener
     */
    private void initTextBoxesListener() {
        txtRefName.addKeyListener(this);
        txtRefAddress.addKeyListener(this);
        txtRefContact.addKeyListener(this);
        txtRefRelationship.addKeyListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtRefContact = new javax.swing.JTextField();
        txtRefAddress = new javax.swing.JTextField();
        txtRefName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtRefRelationship = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel1.setText("Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel2.setText("Address");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 35, -1, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel3.setText("Contact");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 60, -1, -1));

        txtRefContact.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtRefContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 55, 140, -1));

        txtRefAddress.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtRefAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 30, 255, -1));

        txtRefName.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtRefName, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 5, 255, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel4.setText("Relationship");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 85, -1, -1));

        txtRefRelationship.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtRefRelationship, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 80, 140, -1));
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtRefAddress;
    private javax.swing.JTextField txtRefContact;
    private javax.swing.JTextField txtRefName;
    private javax.swing.JTextField txtRefRelationship;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
        switch (e.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                if (txtRefName.isFocusOwner()) {
                txtRefAddress.requestFocus();
            } else if (txtRefAddress.isFocusOwner()) {
                txtRefContact.requestFocus();
            } else if (txtRefContact.isFocusOwner()) {
                txtRefRelationship.requestFocus();
            }
                break;
            case KeyEvent.VK_UP:
                if (txtRefRelationship.isFocusOwner()) {
                txtRefContact.requestFocus();
            } else if (txtRefContact.isFocusOwner()) {
                txtRefAddress.requestFocus();
            } else if (txtRefAddress.isFocusOwner()) {
                txtRefName.requestFocus();
            }
                break;
        }
    }
}
