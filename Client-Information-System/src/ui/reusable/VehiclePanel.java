/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.reusable;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.math.BigDecimal;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import ui.validator.InputValidator;

/**
 *
 * @author rodel
 */
public class VehiclePanel extends javax.swing.JPanel implements KeyListener {

    /**
     * Creates new form VehiclePanel
     */
    public VehiclePanel() {
        initComponents();
        initKeyListeners();
    }

    /**
     * Set KeyListeners
     */
    private void initKeyListeners() {
        txtTypeModel.addKeyListener(this);
        txtYrsUsed.addKeyListener(this);
        txtUsedDesc.addKeyListener(this);
        txtEstValue.addKeyListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblVehicle = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtTypeModel = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtYrsUsed = new javax.swing.JTextField();
        txtUsedDesc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtEstValue = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblVehicle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Type/Model", "Years Used", "Use", "Estimated Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblVehicle);
        tblVehicle.getColumnModel().getColumn(0).setResizable(false);
        tblVehicle.getColumnModel().getColumn(1).setResizable(false);
        tblVehicle.getColumnModel().getColumn(2).setResizable(false);
        tblVehicle.getColumnModel().getColumn(3).setResizable(false);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 5, 600, 90));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel1.setText("Type/Model");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 120, -1, -1));

        txtTypeModel.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        txtTypeModel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTypeModelFocusLost(evt);
            }
        });
        add(txtTypeModel, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 115, 255, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel2.setText("Yrs. Used");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 145, -1, -1));

        txtYrsUsed.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        txtYrsUsed.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtYrsUsedFocusLost(evt);
            }
        });
        add(txtYrsUsed, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 140, 80, -1));

        txtUsedDesc.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtUsedDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 140, 120, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel3.setText("Use as");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 145, -1, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel4.setText("Est. Value");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 170, -1, -1));

        txtEstValue.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtEstValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 165, 255, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtYrsUsedFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtYrsUsedFocusLost
        BigDecimal yearsUsed = validate(txtYrsUsed);
    }//GEN-LAST:event_txtYrsUsedFocusLost

    private void txtTypeModelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTypeModelFocusLost
        if(InputValidator.getInstance().isEmpty(txtTypeModel.getText())) {
            JOptionPane.showMessageDialog(null, "Please don't leave the TYPE/MODEL blank.", "MESSAGE", JOptionPane.WARNING_MESSAGE);
            txtTypeModel.requestFocus();
        } 
    }//GEN-LAST:event_txtTypeModelFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblVehicle;
    private javax.swing.JTextField txtEstValue;
    private javax.swing.JTextField txtTypeModel;
    private javax.swing.JTextField txtUsedDesc;
    private javax.swing.JTextField txtYrsUsed;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
        switch (e.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                if (txtTypeModel.isFocusOwner()) {
                txtYrsUsed.requestFocus();
            } else if (txtYrsUsed.isFocusOwner()) {
                txtUsedDesc.requestFocus();
            } else if (txtUsedDesc.isFocusOwner()) {
                txtEstValue.requestFocus();
            }
                break;
            case KeyEvent.VK_UP:
                if (txtEstValue.isFocusOwner()) {
                txtUsedDesc.requestFocus();
            } else if (txtUsedDesc.isFocusOwner()) {
                txtYrsUsed.requestFocus();
            } else if (txtYrsUsed.isFocusOwner()) {
                txtTypeModel.requestFocus();
            }
                break;
        }
    }

    private BigDecimal validate(JTextField field) {
        if (!InputValidator.getInstance().isEmpty(field.getText())) {
            if (InputValidator.getInstance().isNumeric(field.getText())) {
                return new BigDecimal(field.getText().trim());
            } else {
                JOptionPane.showMessageDialog(null, "Please provide numeric values.", "MESSAGE", JOptionPane.WARNING_MESSAGE);
                field.requestFocus();
                field.selectAll();
                return new BigDecimal("0");
            }
        } else {
            return new BigDecimal("0");
        }
    }
}
