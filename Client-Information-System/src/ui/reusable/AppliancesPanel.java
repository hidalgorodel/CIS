/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.reusable;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.math.BigDecimal;
import javax.swing.JOptionPane;
import ui.validator.InputValidator;

/**
 *
 * @author rodel
 */
public class AppliancesPanel extends javax.swing.JPanel implements KeyListener {

    /**
     * Creates new form AppliancesPanel
     */
    public AppliancesPanel() {
        initComponents();
        initKeyListeners();
    }
    
    private void initKeyListeners() {
        comboApplianceType.addKeyListener(this);
        txtEstValue.addKeyListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAppliance = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        comboApplianceType = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtEstValue = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTotalEstValue = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblAppliance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Type", "Estimated Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAppliance);
        tblAppliance.getColumnModel().getColumn(0).setResizable(false);
        tblAppliance.getColumnModel().getColumn(1).setResizable(false);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 5, 433, 90));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel2.setText("Type:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 110, -1, -1));

        comboApplianceType.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        comboApplianceType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Television", "Refrigerator", "Washing Machine", "Aircon Unit", "Computer", "DVD/VCD", "Others" }));
        add(comboApplianceType, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 105, 144, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel3.setText("Est. value");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, -1, -1));

        txtEstValue.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        txtEstValue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEstValueFocusLost(evt);
            }
        });
        add(txtEstValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 105, 140, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel4.setText("Total Est. value");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 135, -1, -1));

        txtTotalEstValue.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtTotalEstValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 130, 140, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtEstValueFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEstValueFocusLost
        if(InputValidator.getInstance().isEmpty(txtEstValue.getText())) {
            JOptionPane.showMessageDialog(null, "Please provide an estimated value.", "MESSAGE", JOptionPane.WARNING_MESSAGE);
            txtEstValue.requestFocus();
        } else {
            if(InputValidator.getInstance().isNumeric(txtEstValue.getText())) {
                BigDecimal estValue = new BigDecimal(txtEstValue.getText());
            } else {
                JOptionPane.showMessageDialog(null, "Please provide numeric value.", "MESSAGE", JOptionPane.WARNING_MESSAGE);
                txtEstValue.requestFocus();
                txtEstValue.selectAll();
            }
        }
    }//GEN-LAST:event_txtEstValueFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboApplianceType;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAppliance;
    private javax.swing.JTextField txtEstValue;
    private javax.swing.JTextField txtTotalEstValue;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
        switch (e.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                if (comboApplianceType.isFocusOwner()) {
                txtEstValue.requestFocus();
            }
                break;
            case KeyEvent.VK_UP:
                if (txtEstValue.isFocusOwner()) {
                comboApplianceType.requestFocus();
            }
                break;
        }
    }
}
