/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.reusable;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

/**
 *
 * @author rodel
 */
public class CreditReferencePanel extends javax.swing.JPanel implements KeyListener {

    /**
     * Creates new form CreditReferencePanel
     */
    public CreditReferencePanel() {
        initComponents();
        initTextBoxesListener();
    }
    
    /**
     * Set TextBoxes KeyListener
     */
    private void initTextBoxesListener() {
        txtCRNameAddress.addKeyListener(this);
        txtCRItemOnCredit.addKeyListener(this);
        txtCRLoanAmount.addKeyListener(this);
        txtCRMonthlyAmort.addKeyListener(this);
        txtCRTerm.addKeyListener(this);
        txtCRAmountPaid.addKeyListener(this);
        txtCRRemainingBal.addKeyListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCRNameAddress = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCRItemOnCredit = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCRLoanAmount = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCRMonthlyAmort = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCRTerm = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCRAmountPaid = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCRRemainingBal = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel1.setText("Name & Addrs.");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 10, -1, -1));

        txtCRNameAddress.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtCRNameAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 5, 359, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel2.setText("Item on credit");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 35, -1, -1));

        txtCRItemOnCredit.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtCRItemOnCredit, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 30, 127, -1));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel3.setText("Loan Amount");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 35, -1, -1));

        txtCRLoanAmount.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtCRLoanAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(337, 30, 127, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel4.setText("Monthly Amort.");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 60, -1, -1));

        txtCRMonthlyAmort.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtCRMonthlyAmort, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 55, 127, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel5.setText("Term");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 60, -1, -1));

        txtCRTerm.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtCRTerm, new org.netbeans.lib.awtextra.AbsoluteConstraints(337, 55, 127, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel6.setText("Amount paid");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 85, -1, -1));

        txtCRAmountPaid.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtCRAmountPaid, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 80, 127, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel7.setText("Remaining Bal.");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 85, -1, -1));

        txtCRRemainingBal.setFont(new java.awt.Font("Monospaced", 0, 9)); // NOI18N
        add(txtCRRemainingBal, new org.netbeans.lib.awtextra.AbsoluteConstraints(337, 80, 127, -1));
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtCRAmountPaid;
    private javax.swing.JTextField txtCRItemOnCredit;
    private javax.swing.JTextField txtCRLoanAmount;
    private javax.swing.JTextField txtCRMonthlyAmort;
    private javax.swing.JTextField txtCRNameAddress;
    private javax.swing.JTextField txtCRRemainingBal;
    private javax.swing.JTextField txtCRTerm;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
        switch (e.getKeyCode()) {
            case KeyEvent.VK_ENTER:
                if (txtCRNameAddress.isFocusOwner()) {
                txtCRItemOnCredit.requestFocus();
            } else if (txtCRItemOnCredit.isFocusOwner()) {
                txtCRLoanAmount.requestFocus();
            } else if (txtCRLoanAmount.isFocusOwner()) {
                txtCRMonthlyAmort.requestFocus();
            } else if (txtCRMonthlyAmort.isFocusOwner()) {
                txtCRTerm.requestFocus();
            } else if (txtCRTerm.isFocusOwner()) {
                txtCRAmountPaid.requestFocus();
            } else if (txtCRAmountPaid.isFocusOwner()) {
                txtCRRemainingBal.requestFocus();
            }
                break;
            case KeyEvent.VK_UP:
                if (txtCRRemainingBal.isFocusOwner()) {
                txtCRAmountPaid.requestFocus();
            } else if (txtCRAmountPaid.isFocusOwner()) {
                txtCRTerm.requestFocus();
            } else if (txtCRTerm.isFocusOwner()) {
                txtCRMonthlyAmort.requestFocus();
            } else if (txtCRMonthlyAmort.isFocusOwner()) {
                txtCRLoanAmount.requestFocus();
            } else if (txtCRLoanAmount.isFocusOwner()) {
                txtCRItemOnCredit.requestFocus();
            } else if (txtCRItemOnCredit.isFocusOwner()) {
                txtCRNameAddress.requestFocus();
            }
                break;
        }
    }
}
